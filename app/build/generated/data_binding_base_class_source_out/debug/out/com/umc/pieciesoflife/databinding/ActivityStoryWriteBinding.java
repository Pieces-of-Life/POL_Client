// Generated by view binder compiler. Do not edit!
package com.umc.pieciesoflife.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.umc.pieciesoflife.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStoryWriteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton buttonBack;

  @NonNull
  public final Button buttonFinish;

  @NonNull
  public final Button buttonGuide;

  @NonNull
  public final Button buttonNext;

  @NonNull
  public final Button buttonSkipQuestion;

  @NonNull
  public final EditText editTextTextMultiLineWriteStory;

  @NonNull
  public final View selectTagView;

  @NonNull
  public final Button tagAgeButton;

  @NonNull
  public final Button tagMatterButton;

  @NonNull
  public final Button tagMoodButton;

  @NonNull
  public final Button tagObjectButton;

  @NonNull
  public final Button tagPersonButton;

  @NonNull
  public final Button tagPlaceButton;

  @NonNull
  public final Button tagYearButton;

  @NonNull
  public final TextView textView45;

  @NonNull
  public final TextView textView46;

  @NonNull
  public final TextView textView47;

  @NonNull
  public final TextView textView49;

  @NonNull
  public final TextView textViewTag;

  @NonNull
  public final View view;

  private ActivityStoryWriteBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton buttonBack, @NonNull Button buttonFinish, @NonNull Button buttonGuide,
      @NonNull Button buttonNext, @NonNull Button buttonSkipQuestion,
      @NonNull EditText editTextTextMultiLineWriteStory, @NonNull View selectTagView,
      @NonNull Button tagAgeButton, @NonNull Button tagMatterButton, @NonNull Button tagMoodButton,
      @NonNull Button tagObjectButton, @NonNull Button tagPersonButton,
      @NonNull Button tagPlaceButton, @NonNull Button tagYearButton, @NonNull TextView textView45,
      @NonNull TextView textView46, @NonNull TextView textView47, @NonNull TextView textView49,
      @NonNull TextView textViewTag, @NonNull View view) {
    this.rootView = rootView;
    this.buttonBack = buttonBack;
    this.buttonFinish = buttonFinish;
    this.buttonGuide = buttonGuide;
    this.buttonNext = buttonNext;
    this.buttonSkipQuestion = buttonSkipQuestion;
    this.editTextTextMultiLineWriteStory = editTextTextMultiLineWriteStory;
    this.selectTagView = selectTagView;
    this.tagAgeButton = tagAgeButton;
    this.tagMatterButton = tagMatterButton;
    this.tagMoodButton = tagMoodButton;
    this.tagObjectButton = tagObjectButton;
    this.tagPersonButton = tagPersonButton;
    this.tagPlaceButton = tagPlaceButton;
    this.tagYearButton = tagYearButton;
    this.textView45 = textView45;
    this.textView46 = textView46;
    this.textView47 = textView47;
    this.textView49 = textView49;
    this.textViewTag = textViewTag;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStoryWriteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStoryWriteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_story_write, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStoryWriteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_back;
      ImageButton buttonBack = ViewBindings.findChildViewById(rootView, id);
      if (buttonBack == null) {
        break missingId;
      }

      id = R.id.button_finish;
      Button buttonFinish = ViewBindings.findChildViewById(rootView, id);
      if (buttonFinish == null) {
        break missingId;
      }

      id = R.id.button_guide;
      Button buttonGuide = ViewBindings.findChildViewById(rootView, id);
      if (buttonGuide == null) {
        break missingId;
      }

      id = R.id.button_next;
      Button buttonNext = ViewBindings.findChildViewById(rootView, id);
      if (buttonNext == null) {
        break missingId;
      }

      id = R.id.button_skip_question;
      Button buttonSkipQuestion = ViewBindings.findChildViewById(rootView, id);
      if (buttonSkipQuestion == null) {
        break missingId;
      }

      id = R.id.editTextTextMultiLine_write_story;
      EditText editTextTextMultiLineWriteStory = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextMultiLineWriteStory == null) {
        break missingId;
      }

      id = R.id.select_tag_view;
      View selectTagView = ViewBindings.findChildViewById(rootView, id);
      if (selectTagView == null) {
        break missingId;
      }

      id = R.id.tag_age_button;
      Button tagAgeButton = ViewBindings.findChildViewById(rootView, id);
      if (tagAgeButton == null) {
        break missingId;
      }

      id = R.id.tag_matter_button;
      Button tagMatterButton = ViewBindings.findChildViewById(rootView, id);
      if (tagMatterButton == null) {
        break missingId;
      }

      id = R.id.tag_mood_button;
      Button tagMoodButton = ViewBindings.findChildViewById(rootView, id);
      if (tagMoodButton == null) {
        break missingId;
      }

      id = R.id.tag_object_button;
      Button tagObjectButton = ViewBindings.findChildViewById(rootView, id);
      if (tagObjectButton == null) {
        break missingId;
      }

      id = R.id.tag_person_button;
      Button tagPersonButton = ViewBindings.findChildViewById(rootView, id);
      if (tagPersonButton == null) {
        break missingId;
      }

      id = R.id.tag_place_button;
      Button tagPlaceButton = ViewBindings.findChildViewById(rootView, id);
      if (tagPlaceButton == null) {
        break missingId;
      }

      id = R.id.tag_year_button;
      Button tagYearButton = ViewBindings.findChildViewById(rootView, id);
      if (tagYearButton == null) {
        break missingId;
      }

      id = R.id.textView45;
      TextView textView45 = ViewBindings.findChildViewById(rootView, id);
      if (textView45 == null) {
        break missingId;
      }

      id = R.id.textView46;
      TextView textView46 = ViewBindings.findChildViewById(rootView, id);
      if (textView46 == null) {
        break missingId;
      }

      id = R.id.textView47;
      TextView textView47 = ViewBindings.findChildViewById(rootView, id);
      if (textView47 == null) {
        break missingId;
      }

      id = R.id.textView49;
      TextView textView49 = ViewBindings.findChildViewById(rootView, id);
      if (textView49 == null) {
        break missingId;
      }

      id = R.id.textView_tag;
      TextView textViewTag = ViewBindings.findChildViewById(rootView, id);
      if (textViewTag == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new ActivityStoryWriteBinding((ConstraintLayout) rootView, buttonBack, buttonFinish,
          buttonGuide, buttonNext, buttonSkipQuestion, editTextTextMultiLineWriteStory,
          selectTagView, tagAgeButton, tagMatterButton, tagMoodButton, tagObjectButton,
          tagPersonButton, tagPlaceButton, tagYearButton, textView45, textView46, textView47,
          textView49, textViewTag, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
