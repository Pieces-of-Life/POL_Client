// Generated by view binder compiler. Do not edit!
package com.umc.pieciesoflife.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.umc.pieciesoflife.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBookBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView bookContent;

  @NonNull
  public final TextView bookDate;

  @NonNull
  public final ImageView bookPost;

  @NonNull
  public final TextView bookPostTitle;

  @NonNull
  public final TextView bookPostUserName;

  @NonNull
  public final ImageView bookPostprofile;

  @NonNull
  public final TextView bookTitle;

  private ItemBookBinding(@NonNull ConstraintLayout rootView, @NonNull TextView bookContent,
      @NonNull TextView bookDate, @NonNull ImageView bookPost, @NonNull TextView bookPostTitle,
      @NonNull TextView bookPostUserName, @NonNull ImageView bookPostprofile,
      @NonNull TextView bookTitle) {
    this.rootView = rootView;
    this.bookContent = bookContent;
    this.bookDate = bookDate;
    this.bookPost = bookPost;
    this.bookPostTitle = bookPostTitle;
    this.bookPostUserName = bookPostUserName;
    this.bookPostprofile = bookPostprofile;
    this.bookTitle = bookTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBookBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBookBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_book, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBookBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.book_content;
      TextView bookContent = ViewBindings.findChildViewById(rootView, id);
      if (bookContent == null) {
        break missingId;
      }

      id = R.id.book_date;
      TextView bookDate = ViewBindings.findChildViewById(rootView, id);
      if (bookDate == null) {
        break missingId;
      }

      id = R.id.book_post;
      ImageView bookPost = ViewBindings.findChildViewById(rootView, id);
      if (bookPost == null) {
        break missingId;
      }

      id = R.id.book_postTitle;
      TextView bookPostTitle = ViewBindings.findChildViewById(rootView, id);
      if (bookPostTitle == null) {
        break missingId;
      }

      id = R.id.book_postUserName;
      TextView bookPostUserName = ViewBindings.findChildViewById(rootView, id);
      if (bookPostUserName == null) {
        break missingId;
      }

      id = R.id.book_postprofile;
      ImageView bookPostprofile = ViewBindings.findChildViewById(rootView, id);
      if (bookPostprofile == null) {
        break missingId;
      }

      id = R.id.book_title;
      TextView bookTitle = ViewBindings.findChildViewById(rootView, id);
      if (bookTitle == null) {
        break missingId;
      }

      return new ItemBookBinding((ConstraintLayout) rootView, bookContent, bookDate, bookPost,
          bookPostTitle, bookPostUserName, bookPostprofile, bookTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
