// Generated by view binder compiler. Do not edit!
package com.umc.pieciesoflife.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.umc.pieciesoflife.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySaveFinalBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonFinish;

  @NonNull
  public final TextView textView58;

  @NonNull
  public final TextView textViewDate;

  @NonNull
  public final TextView textViewDate2;

  @NonNull
  public final TextView textViewTitle;

  private ActivitySaveFinalBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonFinish,
      @NonNull TextView textView58, @NonNull TextView textViewDate, @NonNull TextView textViewDate2,
      @NonNull TextView textViewTitle) {
    this.rootView = rootView;
    this.buttonFinish = buttonFinish;
    this.textView58 = textView58;
    this.textViewDate = textViewDate;
    this.textViewDate2 = textViewDate2;
    this.textViewTitle = textViewTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySaveFinalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySaveFinalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_save_final, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySaveFinalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_finish;
      Button buttonFinish = ViewBindings.findChildViewById(rootView, id);
      if (buttonFinish == null) {
        break missingId;
      }

      id = R.id.textView58;
      TextView textView58 = ViewBindings.findChildViewById(rootView, id);
      if (textView58 == null) {
        break missingId;
      }

      id = R.id.textView_date;
      TextView textViewDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewDate == null) {
        break missingId;
      }

      id = R.id.textView_date2;
      TextView textViewDate2 = ViewBindings.findChildViewById(rootView, id);
      if (textViewDate2 == null) {
        break missingId;
      }

      id = R.id.textView_title;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      return new ActivitySaveFinalBinding((ConstraintLayout) rootView, buttonFinish, textView58,
          textViewDate, textViewDate2, textViewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
