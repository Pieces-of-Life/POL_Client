// Generated by view binder compiler. Do not edit!
package com.umc.pieciesoflife.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.umc.pieciesoflife.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExploreBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ToolbarBinding abInclude;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ConstraintLayout layoutEx2;

  @NonNull
  public final RecyclerView recyclerView2;

  @NonNull
  public final TextView tvAlignLike;

  @NonNull
  public final TextView tvAlignNew;

  @NonNull
  public final TextView tvExplore;

  @NonNull
  public final View view2;

  private ActivityExploreBinding(@NonNull ConstraintLayout rootView,
      @NonNull ToolbarBinding abInclude, @NonNull ConstraintLayout constraintLayout,
      @NonNull ConstraintLayout layoutEx2, @NonNull RecyclerView recyclerView2,
      @NonNull TextView tvAlignLike, @NonNull TextView tvAlignNew, @NonNull TextView tvExplore,
      @NonNull View view2) {
    this.rootView = rootView;
    this.abInclude = abInclude;
    this.constraintLayout = constraintLayout;
    this.layoutEx2 = layoutEx2;
    this.recyclerView2 = recyclerView2;
    this.tvAlignLike = tvAlignLike;
    this.tvAlignNew = tvAlignNew;
    this.tvExplore = tvExplore;
    this.view2 = view2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExploreBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExploreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_explore, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExploreBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ab_include;
      View abInclude = ViewBindings.findChildViewById(rootView, id);
      if (abInclude == null) {
        break missingId;
      }
      ToolbarBinding binding_abInclude = ToolbarBinding.bind(abInclude);

      ConstraintLayout constraintLayout = (ConstraintLayout) rootView;

      id = R.id.layout_ex2;
      ConstraintLayout layoutEx2 = ViewBindings.findChildViewById(rootView, id);
      if (layoutEx2 == null) {
        break missingId;
      }

      id = R.id.recyclerView2;
      RecyclerView recyclerView2 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView2 == null) {
        break missingId;
      }

      id = R.id.tv_align_like;
      TextView tvAlignLike = ViewBindings.findChildViewById(rootView, id);
      if (tvAlignLike == null) {
        break missingId;
      }

      id = R.id.tv_align_new;
      TextView tvAlignNew = ViewBindings.findChildViewById(rootView, id);
      if (tvAlignNew == null) {
        break missingId;
      }

      id = R.id.tv_explore;
      TextView tvExplore = ViewBindings.findChildViewById(rootView, id);
      if (tvExplore == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      return new ActivityExploreBinding((ConstraintLayout) rootView, binding_abInclude,
          constraintLayout, layoutEx2, recyclerView2, tvAlignLike, tvAlignNew, tvExplore, view2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
